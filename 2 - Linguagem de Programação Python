{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM10cwcoVX/FjaVXg/sCaiw"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Proposta da tarefa\n","\n","Abranger diversas funcionalidades python de forma pr√°tica atrav√©s de um curso, assim como explorar conceitos POO ao fim da tarefa.\n","\n","Video 1: [PYTHON 3 Curso R√°pido üêç Parte #1 2020 - 100% Pr√°tico!](https://youtu.be/oUrBHiT-lzo?si=N1RhLUVZZhbtwQSN) (1 hora e 38 minutos)\n","\n","Video 2: [PYTHON 3 Curso R√°pido üêç Parte #2 2020 - 100% Pr√°tico!](https://youtu.be/iq7JLIH-sV0?si=xv07ql-WhT8VVJgz) (1 hora e 41 minutos)"],"metadata":{"id":"P708xkdbZNHb"}},{"cell_type":"markdown","source":["\n","\n","# Resumo da parte 1 e 2 do curso r√°pido de python 3\n","\n","As c√©lulas a seguir resumem o conte√∫do passado e codificado nos v√≠deos, seguindo tamb√©m a sua ordem de conte√∫dos apresentados."],"metadata":{"id":"cjhb5kOW-VIr"}},{"cell_type":"markdown","source":["# Pacotes e m√≥dulos\n","Em python, os pacotes e m√≥dulos s√£o uma forma de organizar e reutilizar os c√≥digos, onde os m√≥dulos ser√£o c√≥digos escritos em python que define fun√ß√µes, classes e vari√°veis que podem ser importados para qualquer outro m√≥dulo onde ser√£o usados, se comportando como uma \"biblioteca\".\n","\n","J√° os pacotes s√£o uma forma de organizar m√≥dulos relacionando eles em uma hierarquia de diret√≥rios. Um pacote pode conter outros pacotes ou m√≥dulos dentro dele.\n","\n","No v√≠deo em quest√£o √© criado uma pasta chamada \"pacote\", e uma outra pasta dentro dessa chamada \"sub\", caracterizando assim uma hierarquia de pacotes.\n","\n","Com um m√≥dulo \"arquivo.py\" criado dentro do pacote sub, √© poss√≠vel import√°-lo para a main atrav√©s do c√≥digo a seguir.\n","\n","\n"],"metadata":{"id":"iA7xean_4AgP"}},{"cell_type":"code","source":["import pacote.sub.arquivo"],"metadata":{"id":"7KOsNkZU-jr7"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Onde a partir dessa linha, os comandos de dentro de \"arquivo.py\" ser√£o executados.\n","\n","## Vari√°veis built In\n","Podendo navegar em diferentes m√≥dulos em diferentes pacotes no python, h√° uma forma de em cada c√≥digo, saber qual pacote e qual arquivo est√° sendo executado no momento, e isso pode ser feito atrav√©s das vari√°veis built in.\n","\n","Atrav√©s da vari√°vel name pode-se acessar o nome do m√≥dulo executado naquele momento. J√° na vari√°vel package se tem a informa√ß√£o do pacote em quest√£o. O c√≥digo a seguir representa o uso dessas vari√°veis, assim como √© mostrado no v√≠deo.\n","\n"],"metadata":{"id":"8yL11M6W-m6M"}},{"cell_type":"code","source":["print(__name__)\n","print(__package__)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lYnXJg_3ABvz","executionInfo":{"status":"ok","timestamp":1683761430983,"user_tz":180,"elapsed":3,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"63408a51-05fa-48dd-ab27-f19a37f9581f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["__main__\n","None\n"]}]},{"cell_type":"markdown","source":["## Shebang\n","Como mostrado no c√≥digo abaixo, o shebang √© adicionado ao topo dos arquivos de script para que um programa possa interpret√°-lo e process√°-lo de maneira correta, que nesse caso, √© a do python 3."],"metadata":{"id":"X8umPfE762Sl"}},{"cell_type":"code","source":["#!python3"],"metadata":{"id":"ewYbzp7A7Z8F"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# f string\n","\n","Em python, pode-se usar das f string como forma de facilitar o uso de vari√°veis dentro do comando print. Assim como √© mostrado no v√≠deo, o c√≥digo abaixo √© um exemplo do uso dessa funcionalidade."],"metadata":{"id":"E-C3YzbxAab6"}},{"cell_type":"code","source":["texto = 'Sua idade √©...'\n","idade = 23\n","\n","print(f'{texto} {idade}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JhjenDGHBbA6","executionInfo":{"status":"ok","timestamp":1683761830272,"user_tz":180,"elapsed":3,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"9b121d46-7431-48eb-89c1-ce3fe1908e80"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Sua idade √©... 23\n"]}]},{"cell_type":"markdown","source":["# Recebendo dados do usu√°rio\n","Atrav√©s do comando input, e atribuindo o seu resultado para uma vari√°vel, √© poss√≠vel receber um dado do usu√°rio, que deve ent√£o ser convertido para o tipo certo que deseja usar no programa, envolvendo o input em um tipo do python, como mostrado a seguir."],"metadata":{"id":"HLue61pkCFXh"}},{"cell_type":"code","source":["raio = float(input('Infomr o raio da circ: '))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iv7eCEM2ChUp","executionInfo":{"status":"ok","timestamp":1683762436772,"user_tz":180,"elapsed":5748,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"f7a30c10-fa9a-4deb-9b3f-fde575930664"},"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["Infomr o raio da circ: 89\n"]}]},{"cell_type":"markdown","source":["# Tipo da vari√°vel\n","O tipo de uma vari√°vel pode ser verificada atrav√©s da chamada do comando type.\n","\n","\n"],"metadata":{"id":"MXslYLJuCxLB"}},{"cell_type":"code","source":["print(type(raio))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K81XWFRAC83x","executionInfo":{"status":"ok","timestamp":1683762439049,"user_tz":180,"elapsed":264,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"6d1a30d4-0889-4670-e78a-daa7d356ebca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'float'>\n"]}]},{"cell_type":"markdown","source":["# Listas\n","\n","Uma lista em python √© uma forma de armazenar dados, onde a mesma √© criada da seguinte forma:"],"metadata":{"id":"i9r-g3Mc3UD0"}},{"cell_type":"code","source":["nums = [1, 2, 3]"],"metadata":{"id":"xtYvZlIW4RCq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["A partir de sua cria√ß√£o, novos elementos podem ser adicioando atrav√©s de:"],"metadata":{"id":"1ra2U4de4WAX"}},{"cell_type":"code","source":["nums.append(42)"],"metadata":{"id":"81ynunv_4cJr"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Usando o m√©todo insert, √© poss√≠vel colocar um elemento em um √≠ndice espec√≠fico:\n","\n"],"metadata":{"id":"gF13gEJN4ylF"}},{"cell_type":"code","source":["nums.insert(0, -200)"],"metadata":{"id":"FDWu5Afp56q2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Slicing\n","\n","A listas tamb√©m permitem a sele√ß√£o de seus itens utilizando \":\"."],"metadata":{"id":"tF-LbYeC7djk"}},{"cell_type":"code","source":["print(nums[1:4])\n","print(nums[3:])\n","print(nums[:])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c0hIB3a27oEK","executionInfo":{"status":"ok","timestamp":1683894606808,"user_tz":180,"elapsed":241,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"9c9296d4-fab1-4630-e57a-51800c879740"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 2, 3]\n","[-200, 1, 2, 3, 42]\n","[3, 42]\n"]}]},{"cell_type":"markdown","source":["# Tuplas\n","\n","Diferente da lista que usa colchetes, a tupla usa par√™nteses."],"metadata":{"id":"nCQmXeK-6n1Z"}},{"cell_type":"code","source":["nomes = ('Ana', 'Bia', 'Gui', 'Ana')"],"metadata":{"id":"9Y-uUHsD6s1I"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Conjuntos\n","\n","Os conjuntos s√£o formados por pares de chaves. Ele tamb√©m ignora n√∫meros repetidos que foram passados para ele.\n","\n","N√£o √© uma estrutura indexada, ou seja, n√£o √© acessada atrav√©s do √≠ndice."],"metadata":{"id":"TC9htihl8S0m"}},{"cell_type":"code","source":["conj = {1, 2, 3, 3, 3, 3}\n","print(conj)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ShmhLHP38ZmT","executionInfo":{"status":"ok","timestamp":1683894797290,"user_tz":180,"elapsed":237,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"0245a05c-2ca8-41ae-94c0-1148b04439ba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{1, 2, 3}\n"]}]},{"cell_type":"markdown","source":["# Dicion√°rio\n","\n","Assim como um conjunto (set) ele √© formado por pares de chaves, por√©m ele √© formado por chave e valor.\n"],"metadata":{"id":"Ir-_od-485W4"}},{"cell_type":"code","source":["aluno = {\n","    'nome' : 'Pedro',\n","    'note' : 9.2,\n","    'ativo' : True\n","}\n","\n","print(aluno)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"76ABy1PX9MTa","executionInfo":{"status":"ok","timestamp":1683894941957,"user_tz":180,"elapsed":251,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"af51e14d-1b77-4cbf-a18c-543f3678ea4e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'nome': 'Pedro', 'note': 9.2, 'ativo': True}\n"]}]},{"cell_type":"markdown","source":["# Operadores\n","\n","## Un√°rios\n","\n","Operadores que exercem sua fun√ß√£o em apenas um operando.\n","\n","### Nega√ß√£o l√≥gica\n","\n","Operador que realiza uma opera√ß√£o em uma vari√°vel booleana."],"metadata":{"id":"RzE1CAbK9coS"}},{"cell_type":"code","source":["print(not True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MH72FAOv90cf","executionInfo":{"status":"ok","timestamp":1683895052392,"user_tz":180,"elapsed":273,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"f8689307-1ea0-49c7-830d-bad5fdbe7d93"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n"]}]},{"cell_type":"markdown","source":["### Menos"],"metadata":{"id":"8qmj0vhV-aBh"}},{"cell_type":"code","source":["y = 4\n","print(-y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-7eet9xV-e_n","executionInfo":{"status":"ok","timestamp":1683895229459,"user_tz":180,"elapsed":243,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"c9602152-e31a-49b7-89f7-355b59a722ab"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["-4\n"]}]},{"cell_type":"markdown","source":["### Mais"],"metadata":{"id":"8avV3CsQ-6yq"}},{"cell_type":"code","source":["x = -8\n","print(+x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wN1Y-N4u_ADk","executionInfo":{"status":"ok","timestamp":1683895380658,"user_tz":180,"elapsed":244,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"770a7187-e66a-4f28-d1fd-e1ae804ff067"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["-8\n"]}]},{"cell_type":"markdown","source":["## Bin√°rios\n","\n","Operadores que exercem sua fun√ß√£o em dois operandos.\n","\n","### Aritm√©ticos\n","\n","Existem diferentes operadores aritm√©ticos em python, os quais est√£o listados e mostrados no c√≥digo abaixo:"],"metadata":{"id":"Rq6MT5hO-5mp"}},{"cell_type":"code","source":["x = 10\n","y = 3\n","\n","print(x + y)\n","print(x - y)\n","print(x * y)\n","print(x / y)\n","print(x % y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hymvOTkG_17Q","executionInfo":{"status":"ok","timestamp":1683895602394,"user_tz":180,"elapsed":375,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"1825595c-ee99-452f-fb35-424804186517"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["13\n","7\n","30\n","3.3333333333333335\n","1\n"]}]},{"cell_type":"markdown","source":["### Relacionais\n","\n","Operadores onde o resultado sempre ir√° ser verdadeiro ou falso.\n"],"metadata":{"id":"RSuuGW4GAM3N"}},{"cell_type":"code","source":["x = 7\n","y = 5\n","\n","print(x > y)\n","print(x >= y)\n","print(x < y)\n","print(x <= y)\n","print(x == y)\n","print(x != y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eGFnE_4nAeU8","executionInfo":{"status":"ok","timestamp":1683902838256,"user_tz":180,"elapsed":900,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"5d967e2c-92ba-4870-e22c-5655545a3a11"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","True\n","False\n","False\n","False\n","True\n"]}]},{"cell_type":"markdown","source":["### Atribui√ß√£o\n","\n","Operadores que alteram o resultado de uma vari√°vel."],"metadata":{"id":"NSzF9j_qb5he"}},{"cell_type":"code","source":["Resultado = 2\n","Resultado += 2\n","Resultado -= 2\n","Resultado *= 2\n","Resultado /= 2"],"metadata":{"id":"20gEMX1pcMkO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### L√≥gicos\n","\n","Operadores como \"and\" e \"or\"."],"metadata":{"id":"gWw4qF2fchjz"}},{"cell_type":"code","source":["b1 = True\n","b2 = False\n","b3 = True\n","\n","print(b1 and b2)\n","print(b1 or b2 or b3)\n","print(b1 != b2)           #xor\n","print(not b1)\n","\n","print(b1 and not b2 and b3)\n","\n","# Operadores relacionais com operadores l√≥gicos\n","\n","x = 3\n","y = 4\n","\n","print(b1 and not b2 and x < y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pOGhh0uwclJ3","executionInfo":{"status":"ok","timestamp":1683903227137,"user_tz":180,"elapsed":258,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"141db0d9-8aaa-424a-e842-5ca232034545"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n","True\n","True\n","False\n","True\n","True\n"]}]},{"cell_type":"markdown","source":["## Tern√°rio\n","\n","Forma de usar condicional para atribuir valores para uma vari√°vel."],"metadata":{"id":"2QKxuu2jdIld"}},{"cell_type":"code","source":["lockdown = True\n","\n","status = 'Em casa' if lockdown else 'Uhuul'\n","print(status)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HQccmHGddMLs","executionInfo":{"status":"ok","timestamp":1683903313639,"user_tz":180,"elapsed":361,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"50c1eb4f-fec9-4bac-f2bb-08fe941ffb1e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Em casa\n"]}]},{"cell_type":"markdown","source":["# Estruturas de controle\n","\n","## If\n","\n","Tomada de condi√ß√£o."],"metadata":{"id":"9OubZyFTdif6"}},{"cell_type":"code","source":["nota = float(input('Nota: '))\n","\n","if nota >= 9:\n","  print('Duas palavras: para bens!')\n","  print('Quadro de Honra')\n","elif nota >= 7:\n","  print('Aprovado')\n","else:\n","  print('Reprovado')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HczvxkQXeOUm","executionInfo":{"status":"ok","timestamp":1683903599165,"user_tz":180,"elapsed":2408,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"875e017a-eb6b-4453-9433-9e254c9ebb04"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nota: 10\n","Duas palavras: para bens!\n","Quadro de Honra\n"]}]},{"cell_type":"markdown","source":["Algumas propriedades do if:"],"metadata":{"id":"dJrORD_if7Tk"}},{"cell_type":"code","source":["a = 'valor'       # True\n","a = 0             # False\n","a = -0.00001      # True\n","a = ''            # False\n","a = ' '           # True\n","a = []            # False\n","a = {}            # False"],"metadata":{"id":"guubTFXFf4Ub"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## For\n","\n","La√ßo de repeti√ß√£o com parada determinada."],"metadata":{"id":"Jpa4f0LUgO0A"}},{"cell_type":"code","source":["for i in range(10):\n","  print(i, end=' ')\n"],"metadata":{"id":"jobXZg5qtOOz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684193565320,"user_tz":180,"elapsed":278,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"7a2459e4-225f-4a01-bb36-bbeef9f9c281"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0 1 2 3 4 5 6 7 8 9 "]}]},{"cell_type":"code","source":["for i in range(1, 100, 9):\n","  print(i, end=' ')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4-NnAz-duUVB","executionInfo":{"status":"ok","timestamp":1684193553646,"user_tz":180,"elapsed":308,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"1bc69c82-7654-4c2f-cc5b-4806d90ea2d6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 10 19 28 37 46 55 64 73 82 91 "]}]},{"cell_type":"code","source":["nums = [2, 4, 7, 8]\n","\n","for n in nums:\n","  print(n, end=' | ')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fRPZSyaWuUkw","executionInfo":{"status":"ok","timestamp":1684075566159,"user_tz":180,"elapsed":258,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"5d58d67d-d384-457c-a3b1-69b22f0516eb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2 | 4 | 7 | 8 | "]}]},{"cell_type":"code","source":["texto = 'Python √© muito massa!'\n","\n","for letra in texto:\n","  print(letra, end= '  ')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1eHUPjicuh1G","executionInfo":{"status":"ok","timestamp":1684075765601,"user_tz":180,"elapsed":301,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"c0f12065-aa92-49b9-e74f-2c98c9f0c798"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["P  y  t  h  o  n     √©     m  u  i  t  o     m  a  s  s  a  !  "]}]},{"cell_type":"code","source":["produto = {\n","    'nome': 'Caneta',\n","    'preco': 10,\n","    'desctonto': 0.5\n","}\n","\n","for atrib in produto:\n","  print(atrib, produto[atrib])\n","\n","for atrib, valor in produto.items():\n","  print(f'{atrib} ===> {valor}')\n","\n","for valor in produto.values():\n","  print(valor, end=' ')\n","\n","for atrtib in produto.keys():\n","  print(atrib, end=' ')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TTeeF0ueu5b8","executionInfo":{"status":"ok","timestamp":1684075860287,"user_tz":180,"elapsed":242,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"cbbd8711-3535-4a96-a8b9-457305be8c35"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["nome Caneta\n","preco 10\n","desctonto 0.5\n","nome ===> Caneta\n","preco ===> 10\n","desctonto ===> 0.5\n","Caneta 10 0.5 desctonto desctonto desctonto "]}]},{"cell_type":"markdown","source":["## While\n","\n","La√ßo de repeti√ß√£o com parada indeterminada."],"metadata":{"id":"zcTAAG1Ov2S3"}},{"cell_type":"code","source":["x = 0\n","\n","while x != -1:\n","  x = float(input('Informe o numero -1 para sair: '))\n","\n","print('Fim')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aj1FY7Nov4t4","executionInfo":{"status":"ok","timestamp":1684076459460,"user_tz":180,"elapsed":7883,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"c176c314-02fb-4f8b-edb7-a40ea5762838"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Informe o numero -1 para sair: 4\n","Informe o numero -1 para sair: 56\n","Informe o numero -1 para sair: -1\n","Fim\n"]}]},{"cell_type":"markdown","source":["# Fun√ß√µes\n","\n","A fun√ß√£o abaixo mostra diferentes formas de se usar seus recursos, onde atr√°ves dos par√¢metros nomeado, pode-se escolher na passagem ou n√£o passagem dos par√¢metros."],"metadata":{"id":"dCeg982arImV"}},{"cell_type":"code","source":["def saudacao(nome = 'Pessosa', idade = 20):\n","  print(f'Bom dia, {nome}!\\nVc nem parece ter {idade}\\n')\n","\n","saudacao()\n","saudacao('Breno')\n","saudacao('Breno', 21)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gOq5l_wQrKpH","executionInfo":{"status":"ok","timestamp":1684192506173,"user_tz":180,"elapsed":308,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"1852d448-8277-4446-e367-d0ed8871d44b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Bom dia, Pessosa!\n","Vc nem parece ter 20\n","\n","Bom dia, Breno!\n","Vc nem parece ter 20\n","\n","Bom dia, Breno!\n","Vc nem parece ter 21\n","\n"]}]},{"cell_type":"markdown","source":["## Argumentos\n","\n","### Exemplos de packing\n","\n","\"Empacotar\" os dados recebidos por uma fun√ß√£o em um objeto, sendo ele uma tupla ou um dicion√°rio."],"metadata":{"id":"XciYysZAwq26"}},{"cell_type":"code","source":["def soma(*nums):\n","  total = 0\n","  for n in nums:\n","    total += n\n","  return total\n","\n","\n","s = soma(1, 2, 3, 4, 5, 6)\n","\n","print(s)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q8CCrW2PxARN","executionInfo":{"status":"ok","timestamp":1684193776567,"user_tz":180,"elapsed":253,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"df637cce-8dde-4c38-9e66-0d0b4d682aca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["21\n"]}]},{"cell_type":"code","source":["def resultado_final(**kwargs):\n","  status = 'aprovado' if kwargs['nota'] >= 7 else 'reprovado'\n","  return f'{kwargs[\"nome\"]} foi {status}'\n","\n","\n","resultado = resultado_final(nome='Pedro', nota=5)\n","print(resultado)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E2r9X86-xamx","executionInfo":{"status":"ok","timestamp":1684194132207,"user_tz":180,"elapsed":269,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"66035174-63ab-4228-9203-051768c7c5a7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Pedro foi reprovado\n"]}]},{"cell_type":"markdown","source":["### Programa√ß√£o funcional\n","\n","Forma de armazenar uma fun√ß√£o dentro de uma vari√°vel"],"metadata":{"id":"6-5c7FWkzJ5W"}},{"cell_type":"code","source":["def soma(a, b):\n","  return a+b\n","\n","somar = soma\n","print(somar(3, 4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GB8knaAjzKny","executionInfo":{"status":"ok","timestamp":1684194272075,"user_tz":180,"elapsed":258,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"5d6e65b6-3cb2-4a41-bed5-b976f9b6d069"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["7\n"]}]},{"cell_type":"markdown","source":["O c√≥digo abaixo mostra a utiliza√ß√£o de uma fun√ß√£o sendo passada atrav√©s de um par√¢metro para outra fun√ß√£o cham√°-la."],"metadata":{"id":"8Kbwwde4z1cT"}},{"cell_type":"code","source":["def operacao_aritmetica(fn, op1, op2):\n","  return fn(op1, op2)\n","\n","resultado = operacao_aritmetica(soma, 13, 48)\n","print(resultado)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0-KdvBV1zduX","executionInfo":{"status":"ok","timestamp":1684194410437,"user_tz":180,"elapsed":246,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"e745700f-fa55-415e-ddc5-00117c10204a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["61\n"]}]},{"cell_type":"markdown","source":["O c√≥digo a seguir demonstra como usar do retorno uma fun√ß√£o por outra para realizar uma soma parcial."],"metadata":{"id":"HBwTPUvS1aJz"}},{"cell_type":"code","source":["def soma_parcial(a):\n","  def concluir_soma(b):\n","    return a+b\n","  return concluir_soma\n","\n","fn = soma_parcial(2)\n","resultado = fn(3)\n","print(resultado)\n","\n","resultado = soma_parcial(2)(4)\n","print(resultado)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CNQKy2s30GPT","executionInfo":{"status":"ok","timestamp":1684194613499,"user_tz":180,"elapsed":321,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"de1812f7-0e6b-4cc8-a34d-c9b6f5ad9cd5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5\n","6\n"]}]},{"cell_type":"markdown","source":["## Map\n","\n","Percorre uma lista fazendo altera√ß√µes em seus itens com base em uma fun√ß√£o.\n","\n","Apesar de ambos os la√ßos de repeti√ß√µes a abaixo terem a mesma proposta, o mapping pode ser usado para realizar a mesma a√ß√£o, podendo assim reutilizar tamb√©m a fun√ß√£o mais_um_meio caso queira futuramente no c√≥digo."],"metadata":{"id":"WehrRQPm1rDP"}},{"cell_type":"code","source":["def mais_um_meio(nota):\n","  return nota + 1.5\n","\n","notas = [2, 5.6, 2.6, 7.5]\n","\n","#for i, nota in enumerate(notas):\n","#  notas[i] = nota + 1.5\n","\n","#for i in range(len(notas)):\n","#  notas[i] = notas[i] + 1.5\n","\n","notas_finais = list(map(mais_um_meio, notas))\n","print(notas_finais)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LaDsRUHd1zHH","executionInfo":{"status":"ok","timestamp":1684195444757,"user_tz":180,"elapsed":290,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"769c6b63-61f7-414a-f9ff-bbdec1b52f66"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[3.5, 7.1, 4.1, 9.0]\n"]}]},{"cell_type":"markdown","source":["Normalmente usado quando se quer fornecer uma lista, e ter uma lista alterada como retorno."],"metadata":{"id":"jgdgI8-S6_nn"}},{"cell_type":"markdown","source":["## Reduce\n","\n","Percorre por uma lista chamando uma fun√ß√£o com um par√¢metro sendo um acumulador, e outro como elemento atual."],"metadata":{"id":"kVJ1Jjfa4E-a"}},{"cell_type":"code","source":["from functools import reduce\n","\n","def somar(a, b):\n","  return a+b\n","\n","\n","notas = [2, 5.6, 2.6, 7.5]\n","\n","total = reduce(somar, notas, 0)\n","print(total)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hFRVODhp4UOn","executionInfo":{"status":"ok","timestamp":1684195670459,"user_tz":180,"elapsed":246,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"ff435f8e-778a-4967-f931-a4ae1321c819"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["17.7\n"]}]},{"cell_type":"markdown","source":["## Lambda e Filter\n","\n","A fun√ß√£o filter vai passar por todos os alunos, aplicando a fun√ß√£o lambda em cada um, onde nos casos que a condi√ß√£o √© verdadeira, far√° com que o elemento  esteja presente no array gerado.\n"],"metadata":{"id":"j7TlLv-M4uKw"}},{"cell_type":"code","source":["from functools import reduce\n","\n","alunos = [\n","    {'nome': 'Ana', 'nota': 4.6},\n","    {'nome': 'Breno', 'nota': 10},\n","    {'nome': 'Claudia', 'nota': 7},\n","    {'nome': 'Pedro', 'nota': 5.8},\n","    {'nome': 'Rafael', 'nota': 9.6}\n","    ]\n","\n","aluno_aprovado = lambda aluno: aluno['nota'] >= 7\n","\n","alunos_aprovados = list(filter(aluno_aprovado, alunos))\n","\n","print(alunos_aprovados)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Gjtb4Zyo4-7A","executionInfo":{"status":"ok","timestamp":1684196081843,"user_tz":180,"elapsed":487,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"530fd467-af99-4a0a-a7d6-35fbddfbe0d9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[{'nome': 'Breno', 'nota': 10}, {'nome': 'Claudia', 'nota': 7}, {'nome': 'Rafael', 'nota': 9.6}]\n"]}]},{"cell_type":"markdown","source":["Esse conjunto de lambda e filter pode ser normalmente usado quando se tem uma fun√ß√£o que pode ser especificada em uma linha, e ajuda a selecionar elementos espec√≠ficos de um array junto do filter."],"metadata":{"id":"dZhuP3qw6dAn"}},{"cell_type":"code","source":["obter_nota = lambda aluno: aluno['nota']\n","\n","notas_alunos_aprovados = list(map(obter_nota, alunos_aprovados))\n","\n","print(notas_alunos_aprovados)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"An_bhsFc6vef","executionInfo":{"status":"ok","timestamp":1684196428173,"user_tz":180,"elapsed":291,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"21d4f591-e9dd-42e5-9f98-09971089540f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[10, 7, 9.6]\n"]}]},{"cell_type":"code","source":["somar = lambda a, b: a + b\n","\n","total = reduce(somar, notas_alunos_aprovados, 0)\n","\n","print(total)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V9C8GuE19IMD","executionInfo":{"status":"ok","timestamp":1684196885612,"user_tz":180,"elapsed":312,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"1486ffd3-7394-4fc0-ca14-0565866f9b5f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["26.6\n"]}]},{"cell_type":"markdown","source":["## Resumo\n","\n","Map, reduce e filter s√£o ferramentas aplicadas em listas de objetos, com o objetivo de mapear, somar, e selecionar, por exemplo."],"metadata":{"id":"DH5Y_ZOh9c_1"}},{"cell_type":"markdown","source":["## List Comprehension\n","\n","Forma de iterar sobre uma lista, fazendo altera√ß√µes e compara√ß√µes que ao fim gerar√£o outra lista."],"metadata":{"id":"vohN_9Ts9sK1"}},{"cell_type":"code","source":["alunos_aprovados = [aluno['nota'] for aluno in alunos if aluno['nota'] >= 7]\n","\n","print(alunos_aprovados)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dXjAlx6f9uxQ","executionInfo":{"status":"ok","timestamp":1684197088897,"user_tz":180,"elapsed":275,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"baa76c66-3923-4be5-cc2e-1206d039a18b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[10, 7, 9.6]\n"]}]},{"cell_type":"markdown","source":["# Classe\n","\n","O @property √© um decorator que faz com que o m√©todo do objeto deva ser chamado como um atributo no c√≥digo."],"metadata":{"id":"fjmZ2wEF-Rw_"}},{"cell_type":"code","source":["class Produto:\n","  def __init__(self, nome, preco = 1.99, desc=0):\n","    self.__nome = nome\n","    self.__preco = preco\n","    self.desc = desc\n","\n","  @property\n","  def nome(self):\n","    return self.__nome\n","\n","  @property\n","  def preco(self):\n","    return self.__preco\n","\n","  @preco.setter\n","  def preco(self, novo_preco):\n","    if novo_preco > 0:\n","      self.__preco = novo_preco\n","\n","  @property\n","  def preco_final(self):\n","    return self.preco * (1 - self.desc)\n","\n","p1 = Produto('Caneta', 10)\n","p2 = Produto('Caderno', 34, 0.2)\n","\n","p2.preco = 5\n","\n","print(p1.nome, p1.preco, p1.desc)\n","print(p2.nome, p2.preco, p2.desc, p2.preco_final)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7yPg0DrD-nJ8","executionInfo":{"status":"ok","timestamp":1684198033921,"user_tz":180,"elapsed":247,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"60d80788-dd4a-4993-ee4c-3299618a6a2c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Caneta 10 0\n","Caderno 5 0.2 4.0\n"]}]},{"cell_type":"markdown","source":["## Heran√ßa\n","\n","No exemplo abaixo ambos Uno e Ferrari herdam atributos e m√©todos de Carro."],"metadata":{"id":"NGpflfsACJjJ"}},{"cell_type":"code","source":["class Carro:\n","  def __init__(self):\n","    self.__velocidade = 0\n","\n","  @property\n","  def velocidade(self):\n","    return self.__velocidade\n","\n","  def acelerar(self):\n","    self.__velocidade += 5\n","    return self.__velocidade\n","\n","  def frear(self):\n","    self.__velocidade -= 5\n","    return self.__velocidade\n","\n","class Uno(Carro):\n","  pass\n","\n","class Ferrari(Carro):\n","  def acelerar(self):\n","    super().acelerar()\n","    return super().acelerar()\n","\n","c1 = Carro()\n","\n","c1.acelerar()\n","print(c1.velocidade)\n","\n","c1.acelerar()\n","print(c1.velocidade)\n","\n","c1.acelerar()\n","print(c1.velocidade)\n","\n","c1.acelerar()\n","print(c1.velocidade)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H_y_2X_vCLIj","executionInfo":{"status":"ok","timestamp":1684198467212,"user_tz":180,"elapsed":236,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"9e0f9c72-4505-4b2b-ff8e-a2a8477db94c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5\n","10\n","15\n","20\n"]}]},{"cell_type":"code","source":["c1 = Ferrari()\n","\n","c1.acelerar()\n","print(c1.velocidade)\n","\n","c1.acelerar()\n","print(c1.velocidade)\n","\n","c1.acelerar()\n","print(c1.velocidade)\n","\n","c1.acelerar()\n","print(c1.velocidade)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UCoL3RtPDLH4","executionInfo":{"status":"ok","timestamp":1684198469333,"user_tz":180,"elapsed":254,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"3538548d-6272-4638-b452-8d6f8a193e34"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10\n","20\n","30\n","40\n"]}]},{"cell_type":"markdown","source":["## Membros"],"metadata":{"id":"WOYEUTKjDVfD"}},{"cell_type":"code","source":["class Contador:\n","  contador = 0 # Atributo de classe\n","\n","  @classmethod\n","  def inc(cls):\n","    cls.contador += 1\n","    return cls.contador\n","\n","  @staticmethod\n","  def mais_um(n):\n","    return n + 1\n","\n","print(Contador.inc())\n","print(Contador.inc())\n","print(Contador.inc())\n","print(Contador.mais_um(99))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rZ31k8O2DZEU","executionInfo":{"status":"ok","timestamp":1684198729320,"user_tz":180,"elapsed":256,"user":{"displayName":"Breno Lima","userId":"14321360266775158244"}},"outputId":"252be7a8-2d12-45a5-c5af-b47f48605d06"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","100\n"]}]},{"cell_type":"markdown","source":["# Fim\n","\n","Aqui encerra os conte√∫dos e c√≥digos passados no curso de python 3."],"metadata":{"id":"O2lLWBo_Gdk-"}}]}